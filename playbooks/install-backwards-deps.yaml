---
- hosts: all
  become: true
  tasks:
    - name: Remove python3-pip
      apt: 
        name: python3-pip 
        state: absent
    - name: Remove apache2
      apt:
        name: apache2
        state: absent
    - name: Remove libapache2-mod-wsgi-py3
      apt:
        name: libapache2-mod-wsgi-py3
        state: absent
    - name: Install python and mySQL deps
      package:
        name: "{{ item }}"
      with_items:
        - "python3.7-dev"
        - "python3.7-minimal"
        - "python3.8-dev"
        - "python3.8-minimal"
        - "python3-pip"
        - "python3-setuptools"
          #    - name: Remove python3.6-dev
          #apt:
          #name: python3.6-dev
          #state: absent
          #- name: Remove python3.6-minimal
          #apt:
          #name: python3.6-minimal
          #state: absent
    - name: apt autoremove
      apt:
        autoremove: yes
        purge: yes

          #    - name: Remove Python3 ln
          #shell: sudo rm /usr/bin/python3

          #- name: Create symbolic link
          #file:
          #src: "/usr/bin/python3.7"
          #dest: "/usr/bin/python3"
          #state: link
#    - name: Install pip
#      shell: sudo python3.7 -m easy_install pip
    - name: Install qemu service
      package:
        name: "{{ item }}"
      with_items:
        - "qemu-kvm"
        - "libvirt-daemon-system "
        - "libvirt-clients"
        - "qemu-system"
        - "libvirt-dev"
        - "libapache2-mod-wsgi-py3"
    - name: Install virtualenv for python3
      pip:
        name: virtualenv
        executable: pip3
    - name: Install paramiko for python3
      pip:
        name: paramiko
        executable: pip3

    - name: Install storops for python3
      pip:
        name: storops
        executable: pip3
    - name: Install mod_wsgi
      pip:
        name: mod_wsgi
        executable: pip3
#    - name: Remove python3 dist apt pkg python3-simplejson
#      apt:
#        name: python3-simplejson
#        state: absent
#    - name: Remove dist apt package python3-pyasn1-modules
#      apt:
#        name: python3-pyasn1-modules
#        state: absent
    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: no
        update_cache: yes
        cache_valid_time: 86400 #One day
    - name: Clean unwanted olderstuff
      apt:
        autoremove: yes
        purge: yes 

    - name: Install paramiko for python3.7
      shell: /usr/bin/python3.7 -m pip install paramiko
    - name: Install storops for python3.7
      shell: /usr/bin/python3.7 -m pip install storops
    - name: Install paramiko for python3.8
      shell: /usr/bin/python3.8 -m pip install paramiko
    - name: Install storops for python3.8
      shell: /usr/bin/python3.8 -m pip install storops
    - name: Install mod_wsgi for python3.7
      shell: /usr/bin/python3.7 -m pip install mod_wsgi
    - name: Install mod_wsgi for python3.8
      shell: /usr/bin/python3.8 -m pip install mod_wsgi
- hosts: primary
  tasks:
    - name: git clone devstack gate
      git:
        repo: http://opendev.org/openstack/devstack-gate
        dest: "{{ workspace }}/devstack-gate"

    - name: check existance of scripts directory
      stat:
        path: "{{ workspace }}/devstack-gate"

    - name: check existance of script
      stat:
        path: "{{ workspace }}/devstack-gate/devstack-vm-gate-wrap.sh"

- hosts: all
  roles:
    - role: fetch-zuul-cloner
      destination: "/usr/zuul-env/bin/zuul-cloner"
      repo_src_dir: "/home/ubuntu/src/opendev.org"
  tasks:
    - name: Create nodepool directory
      file:
        path: /etc/nodepool
        state: directory
        owner: ubuntu
        group: ubuntu
      become: true

    - name: Create nodepool uuid file
      copy:
        dest: /etc/nodepool/uuid
        content: |
          {{ ansible_hostname | to_uuid }}

    - name: Create nodepool sub_nodes file
      copy:
        dest: /etc/nodepool/sub_nodes
        content: ""

    - name: Create nodepool sub_nodes_private file
      copy:
        dest: /etc/nodepool/sub_nodes_private
        content: ""

    - name: Populate nodepool sub_nodes file
      lineinfile:
        path: /etc/nodepool/sub_nodes
        line: "{{ hostvars[item]['nodepool']['public_ipv4'] }}"
      with_items: "{{ groups['subnodes'] }}"
      when: groups['subnodes'] is defined

    - name: Populate nodepool sub_nodes_private file
      lineinfile:
        path: /etc/nodepool/sub_nodes_private
        line: "{{ hostvars[item]['nodepool']['private_ipv4'] }}"
      with_items: "{{ groups['subnodes'] }}"
      when: groups['subnodes'] is defined

    - name: Create nodepool primary file
      copy:
        dest: /etc/nodepool/primary_node_private
        content: "{{ hostvars['primary']['nodepool']['private_ipv4'] }}"
      when: hostvars['primary'] is defined

    - name: Create nodepool node_private for this node
      copy:
        dest: /etc/nodepool/node_private
        content: "{{ nodepool.private_ipv4 }}"

    - name: Copy ssh keys to nodepool directory
      command: "cp .ssh/{{ item }} /etc/nodepool/{{ item }}"
      with_items:
        - id_rsa
        - id_rsa.pub
